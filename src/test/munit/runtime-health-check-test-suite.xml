<?xml version="1.0" encoding="UTF-8"?>
<mule
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:avio-core="http://www.mulesoft.org/schema/mule/avio-core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="runtime-health-check-test-suite.xml" />
	<munit:test
		name="health-check-runtime-test"
		doc:id="d36e83c7-49f7-4053-ba37-ff6ac7b2d58c"
		description="Test">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock request-info-subflow"
				doc:id="cbf1b711-e863-40be-a30b-db4af352dc5c"
				processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="request-info-subflow"
						attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[readUrl('classpath://sample_data/request-info.json')]"
						mediaType="application/java"
						encoding="UTF-8" />
					<munit-tools:variables>
						<munit-tools:variable
							key="requestInfo"
							value="#[readUrl('classpath://sample_data/request-info.json')]"
							mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when
				doc:name="Mock server-info-subflow"
				doc:id="ef53e18f-d948-4d7c-b71a-cd0b216f37bc"
				processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="server-info-subflow"
						attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[readUrl('classpath://sample_data/server-info.json')]"
						mediaType="application/java"
						encoding="UTF-8" />
					<munit-tools:variables>
						<munit-tools:variable
							key="serverInfo"
							value="#[readUrl('classpath://sample_data/server-info.json')]"
							mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when
				doc:name="Mock jvm-info-subflow"
				doc:id="60b73053-d572-4937-8f5b-87ef2e527c99"
				processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="jvm-info-subflow"
						attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[readUrl('classpath://sample_data/jvm-info.json')]"
						mediaType="application/java"
						encoding="UTF-8" />
					<munit-tools:variables>
						<munit-tools:variable
							key="jvmInfo"
							value="#[readUrl('classpath://sample_data/jvm-info.json')]"
							mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref
				doc:name="call get:\health\runtime:health-check-api-config"
				doc:id="c3d4fb01-2d05-415c-a5f1-e3eb1635a053"
				name="get:\health\runtime:health-check-api-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals
				doc:name="Assert Mule Info"
				doc:id="0ff23b67-b560-4fda-83b4-08f811d14573"
				actual="#[payload.mule]"
				expected='#[{
	"appName": "health-check-api-mule4",
	"runtimeVersion": mule.version,
	"environment": "dev"
}]' message="Mule Info does not match expected"/>
			<munit-tools:assert-that doc:name="Assert JVM Version" doc:id="1a0b43bf-a3c0-45d5-a578-61a3ec7291b6" is="#[MunitTools::startsWith('1.8')]" expression="#[payload.jvm.vmVersion]" message="JVM Version does not match expected"/>
			<munit-tools:assert-equals doc:name="Assert OS Name" doc:id="b1d16251-c32c-4607-81d0-e0a4ce76ddb0" actual="#[payload.server.osName]" expected="#['Linux']" message="OS Name does not match expected"/>
			<munit-tools:assert-that doc:name="Assert Correlation ID" doc:id="e39392ef-eea8-4a57-b5ec-0fa4da130e83" is="#[MunitTools::notNullValue()]" expression="#[payload.request.correlationId]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="runtime-health-exception-handling-test">
		<munit:behavior>
			<munit-tools:mock-when
				processor="flow-ref"
				doc:name="throw ANY error on request-info-subflow">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="request-info-subflow" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try>
			<flow-ref name="get:\health\runtime:health-check-api-config"
				doc:name="call /health/runtime" />
			<error-handler >
                <on-error-continue type="ANY" enableNotifications="true" logException="true">
					</on-error-continue>
            </error-handler>
        </try>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert 500 HTTP Status" doc:id="97872f94-4f86-45c9-88d0-c17ad02c302d" actual="#[vars.httpStatus]" expected='#[500]' message="httpStatus not equal to 500"/>
			<munit-tools:assert-equals doc:name="Assert Error Payload" doc:id="96f92d2d-7d21-4cab-b978-33a4defb164b" expected='#[%dw 2.0
output application/json
---
{     
	"statusCode" : "500",
	"error" : {    
		"errorType": "MULE:ANY",
		"message" : ""
	}
}]' actual="#[payload]" message="Error payload is not valid"/>
		</munit:validation>
	</munit:test>
</mule>
